cmake_minimum_required(VERSION 3.16)

include(${CMAKE_CURRENT_SOURCE_DIR}/../Nautilus/PlatformDefs.cmake)

project(GLAD)

set(GLAD_SOURCES
    ${CMAKE_CURRENT_SOURCE_DIR}/gl.c
)

if(NT_PLATFORM_WINDOWS)
    set(GLAD_PLATFORM_SOURCES
        ${CMAKE_CURRENT_SOURCE_DIR}/wgl.c
    )
elseif(NT_PLATFORM_LINUX)
    set(GLAD_PLATFORM_SOURCES
        ${CMAKE_CURRENT_SOURCE_DIR}/glx.c
    )
elseif(NT_PLATFORM_MACOS)
    set(GLAD_PLATFORM_SOURCES
        ${CMAKE_CURRENT_SOURCE_DIR}/egl.c
    )
elseif(NT_PLATFORM_IOS OR NT_PLATFORM_ANDROID)
    set(GLAD_PLATFORM_SOURCES
        ${CMAKE_CURRENT_SOURCE_DIR}/gles2.c
    )
elseif(NT_PLATFORM_WASM)
    set(GLAD_PLATFORM_SOURCES
        ${CMAKE_CURRENT_SOURCE_DIR}/gles2.c
    )
endif()
list(APPEND GLAD_SOURCES ${GLAD_PLATFORM_SOURCES})

find_package(OpenGL REQUIRED)

add_library(GLAD STATIC ${GLAD_SOURCES})
target_link_libraries(GLAD PUBLIC OpenGL::GL)

target_include_directories(GLAD PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/include/KHR
    ${CMAKE_CURRENT_SOURCE_DIR}/include/EGL
    ${CMAKE_CURRENT_SOURCE_DIR}/include/glad
    ${CMAKE_CURRENT_SOURCE_DIR}/src
)

set_target_properties(GLAD PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
    LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
    ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
)
